---
title: "2024 Election Model"
date: "10/17/2024"
categories: Politics
image: featured.png
output: pdf_document
theme: cosmo
---

```{r, echo=FALSE, message=FALSE}
library(tidyverse)
library(readxl)
library(sf)
library(ggplot2)
library(tigris)
library(knitr)
library(kableExtra)
```

```{r, echo=FALSE, message=FALSE}
pop <- read_csv("NST-EST2024-ALLDATA.csv")
```

```{r, echo=FALSE}
cleanpop <- pop %>% 
  slice(15:65) %>% 
  select(NAME, POPESTIMATE2024)
```

## Introduction 

For my Stat 155 [final project](https://wstone0.github.io/projects/STAT155FP/urbanization.html) last semester, I examined the connection between urbanization and presidential elections. The results were intriguing; there was both a strong correlation between the variables, and a nearly linear trend of increase in the past fifty years. With the 2024 election just around the corner, I thought it might be interesting to revisit these findings, and see what the implications could be for this pivotal race. To do so, I built a simple model meant to predict the outcome of the election, assuming a very strong correlation between urbanization and voting patterns.

```{r, echo=FALSE, message=FALSE}
urban <- read_csv("urbanization-index-2022.csv")
```

```{r, echo=FALSE}
state_urban <- urban %>% 
  group_by(state) %>% 
  summarize(urbanindex = mean(urbanindex)) %>% 
  mutate(state = state.name[match(state, state.abb)])
```

## Methodology

First, I retrieved urbanization numbers updated with 2020 census data from 538. Next, I computed the urbanization index for the US as a whole, to have a baseline to compare the states to. From these numbers, I obtained an "urban lean" for each state, showing how much more urban or rural it is than the country as a whole. This metric corresponds to the "partisan lean" calculated by 538, Cook, and others, which tells how much redder or bluer a state is from the baseline. So once I rescaled according to 2020 results, I had an "urban-partisan lean" for each Electoral College "state" (negative numbers indicate Republican advantage).

```{r, echo=FALSE}
cleanpop2 <- cleanpop %>% 
  filter(NAME != "District of Columbia") %>% 
  mutate(pop_prop = POPESTIMATE2024/334235500)

names(cleanpop2) <- c("state", "pop_total", "pop_prop")

urban_table <- state_urban %>% 
  left_join(cleanpop2, by = "state") %>% 
  mutate(urban_prop = pop_prop * urbanindex)
```

```{r, echo=FALSE}
log_urban <- state_urban %>% 
  mutate(log_inv = exp(urbanindex))

UI_US <- mean(log_urban$log_inv)

UI_US_adj <- log(UI_US)
```

```{r, echo=FALSE, message=FALSE}
district_urban <- tibble(
  "state" = c("NE 01", "NE 02", "NE 03", "ME 01", "ME 02", "District of Columbia"),
  "urbanindex" = c(10.97282, 11.95222, 8.26581, 9.89315, 8.55475, 13.44057)
)

preds <- urban_table %>% 
  select(state, urbanindex) %>% 
  rbind(district_urban) %>% 
  mutate(urbanlean = urbanindex - UI_US_adj) %>% 
  mutate(predlean = urbanlean * 20) %>% 
  select(state, predlean) %>% 
  mutate(predoutcome = predlean + 1.2)

first_half <- preds[1:28, ]
second_half <- preds[29:56, ]

combined <- bind_cols(first_half, second_half)

combined <- combined %>% 
  mutate(predlean...2 = round(predlean...2, 2)) %>%
  mutate(predlean...5 = round(predlean...5, 2)) %>%
  mutate(predoutcome...3 = round(predoutcome...3, 2)) %>%
  mutate(predoutcome...6 = round(predoutcome...6, 2)) %>% 
  mutate(predoutcome...3 = ifelse(predoutcome...3 > 0, paste0("D+", abs(predoutcome...3)), paste0("R+", abs(predoutcome...3)))) %>% 
  mutate(predoutcome...6 = ifelse(predoutcome...6 > 0, paste0("D+", abs(predoutcome...6)), paste0("R+", abs(predoutcome...6)))) %>% 
  mutate(predlean...2 = ifelse(predlean...2 > 0, paste0("D+", abs(predlean...2)), paste0("R+", abs(predlean...2)))) %>% 
  mutate(predlean...5 = ifelse(predlean...5 > 0, paste0("D+", abs(predlean...5)), paste0("R+", abs(predlean...5))))

kable(combined, col.names = c("State", "Urban-Partisan Lean", "Predicted Outcome", "State", "Urban-Partisan Lean", "Predicted Outcome"))
```

However, a partisan lean alone isn't enough to tell you what will happen; it only predicts results in a neutral national environment. Thankfully, there are ample polls at both the national and state levels available for public consumption. The national average on [270towin](https://www.270towin.com/2024-presidential-election-polls/) was Harris +2.6% on the day of writing this (NOTE: her lead would shrink to 1.2% by election day, this is the number now reflected in the data). Now the model is giving real predictions. By and large they are reasonable, but there are some eye-raising outliers (Utah D+5? Vermont R+38???). In its current state, the model is just a representation of the national mood, and a fairly crude one at that. So I decided to take things a step further, and average the urban-partisan predictions with current state polling, which can hopefully account more for local trends. In turn, however, the polls are flawed in that they sometimes make incorrect assumptions about the overall environment. The urban-partisan lean can then be seen as adjusting the polls on the assumption that urbanization is the main plotline of the 2024 election (which could very well turn out not to be the case).

```{r, echo=FALSE}
polls <- tibble(
  state = c("Georgia", "Florida", "Pennsylvania", "Arizona", "Michigan", "Nevada", "North Carolina", "Wisconsin", "California", "Montana", "Ohio", "Texas", "Maryland", "Massachusetts", "Minnesota", "Virginia", "New Hampshire", "Iowa", "North Dakota", "South Carolina", "Alaska", "Indiana", "Delaware", "New York", "Colorado", "New Mexico", "Connecticut", "Rhode Island", "Maine", "Missouri", "Arkansas", "Washington", "Oklahoma", "Nebraska", "West Virginia", "Utah", "Vermont", "Oregon", "Alabama", "Hawaii", "Idaho", "Illinois", "Kansas", "Kentucky", "Louisiana", "Mississippi", "New Jersey", "South Dakota", "Tennessee", "Wyoming"),
  avg = c(-1.2, -6.2, -0.0, -1.7, 1.8, -0.6, -1.3, 1.1, 24.8, -18, -7.7, -7.4, 27.2, 27.7, 6.2, 5.8, 5, -4.7, -27, -11.7, -8, -16.5, 18.5, 13.5, 10, 6, 16, 16.5, 8.6, -11.5, -15, 21, -16, -17, -27, -32, 32, 12, -25.4, 29.4, -30.7, 16.9, -14.6, -26, -18.6, -16.5, 15.8, -25.8, -23.3, -43.3)
)

district_polls <- tibble(
  state = c("NE 01", "NE 02", "NE 03", "ME 01", "ME 02", "District of Columbia"),
  avg = c(-15.1, 8.4, -53.2, 27, -1, 86.7)
)

polls <- polls %>% rbind(district_polls)
```

```{r, echo=FALSE, message=FALSE}
finalpreds <- preds %>% 
  left_join(polls, by = "state") %>% 
  mutate(prediction = round((avg + predoutcome)/2, 2)) %>% 
  select(state, prediction) %>% 
  arrange(desc(prediction))

first_half <- finalpreds[1:28, ] %>% 
  mutate(prediction = ifelse(prediction > 0, paste0("D+", abs(prediction)), paste0("R+", abs(prediction))))
second_half <- finalpreds[29:56, ] %>% 
  mutate(prediction = ifelse(prediction > 0, paste0("D+", abs(prediction)), paste0("R+", abs(prediction))))

combined <- bind_cols(first_half, second_half)

kable(combined, col.names = c("State", "Predicted Outcome", "State", "Predicted Outcome"))
```

## Analysis

Incorporating 270towin's averages where available (and using 2020 results in the noncompetitive states where they aren't), the model spits out predictions more in the realm of plausibility, but still has plenty of hot takes. For Democrats, there's a lot to like. The model predicts Harris retaining the crucial states of Arizona, Nevada and Pennsylvania, and snatching Florida back, coming tantalizingly close in vote-rich Texas and Ohio as well. There are silver linings for Republicans as well. The "Blue Wall" cracks, with Wisconsin turning red and Michigan and Minnesota essentially tied. Trump also flips Georgia, Maine, New Hampshire, New Mexico and Vermont, while keeping remarkably close in Oregon. While the Vermont number is pure fantasy, and a reminder that these "predictions" are meant to be held with a certain degree of skepticism, Oregon is a spicy pick which I like quite a bit. Though it's often lumped in with its more urban neighbors, Washington and California, as a West Coast liberal haven, in reality Oregon is much more rural, and its major metropolis, Portland, has suffered the past four years from ultra-liberal policies implemented in the wake of 2020. As a result, although Biden won it by 16 points in 2020, two years ago the Democrat only won the governer's race by 3.5%, which is pretty in-line with what the model predicts. However, overall the unavoidable problem for Republicans is that these states are all pocket change compared to the electoral behemoths of Florida, Texas and Ohio, worth a combined 89 votes, and which are critical parts of any winning Republican coalition. And sure enough, when we plug in electoral votes, the model predicts a Kamala Harris victory. 

```{r, echo=FALSE, message=FALSE}
ec <- read_csv("2024_Electoral_College.csv")

districts <- tibble(
  state = c("NE 01", "NE 02", "NE 03", "ME 01", "ME 02"),
  Total = c(1, 1, 1, 1, 1)
)

ec <- ec %>% 
  rename(state = State) %>% 
  select(-Abbreviation) %>% 
  rbind(districts)

ec[28, "Total"] <- 2
ec[20, "Total"] <- 2
```

```{r, echo=FALSE}
winner <- finalpreds %>% 
  left_join(ec, by = "state") %>% 
  mutate(Candidate = if_else(prediction > 0, "Harris", "Trump")) %>% 
  group_by(Candidate) %>% 
  summarize(Votes = sum(Total))

print(winner)
```

However, the number of close state contests means this could easily turn into a blowout one way or the other. The polls underestimated Trump by a little over 4% in 2020: a similar shift would flip Michigan, Pennsylvania, Florida, Virginia, Arizona and Maine's 1st district for good measure, giving him a decisive 344-194 edge. Conversely, a similar-sized shift toward Harris would bring Minnesota, Texas, Georgia, Vermont and Ohio into her column for a whopping 369-169 rout, which would be the biggest this century.

```{r, echo=FALSE}
nowater <- read_sf(dsn = "cb_2018_us_state_500k", layer = "cb_2018_us_state_500k")
```

```{r, echo=FALSE}
new_bounds <- shift_geometry(
  nowater,
  geoid_column = NULL,
  preserve_area = FALSE,
  position = c("below")
) %>% 
  rename("state" = "NAME") %>% 
  filter(state %in% polls$state)
```

```{r, echo=FALSE}
new_bounds <- new_bounds %>% 
  left_join(finalpreds, by = "state")
```

```{r, echo=FALSE}
new_bounds <- new_bounds %>% 
  mutate(pred_cat = case_when(
    prediction < -10 ~ "Safe R",
    prediction < -3 & prediction >= -10 ~ "Lean R",
    prediction >= -3 & prediction <= 3 ~ "Tossup",
    prediction > 3 & prediction <= 10 ~ "Lean D",
    prediction > 10 ~ "Safe D"
  ))

new_bounds %>% 
  ggplot() +
  geom_sf(aes(fill = factor(pred_cat, levels = c("Safe R", "Lean R", "Tossup", "Lean D", "Safe D")))) +
  scale_fill_manual(values = c(
    "Safe R" = "red",
    "Lean R" = "lightcoral",
    "Tossup" = "darkgrey",
    "Lean D" = "lightblue",
    "Safe D" = "blue"
  ),
  guide = guide_legend(title = NULL)
  ) +
  theme_minimal() +
  theme(
    panel.background = element_blank(),
    panel.grid = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    axis.ticks = element_blank()
  ) +
  labs(caption = "Note: district-level predictions not shown.") +
  theme(plot.caption = element_text(hjust = 0.5, face = "italic"))
```

## Conclusion

How seriously should these predictions be taken? Mostly, this was just an exercise to satisfy my curiosity, and I wouldn't put too much weight in the exact numbers. However, there are some reasons to think that it might be more accurate than it seems. For one, there's my previous project, which showed that urbanization is a strong predictor of election results. It also has an advantage over other commonly-used predictors, such as race, gender or education, in that where you live is something you can change. But no one explanatory variable can possibly capture the collective consciousness of 330 million Americans. At the end of the day, the only way to know for sure who will win is to wait for all the votes to be cast and counted.

## UPDATE - Postmortem

Well, these predictions did not hold up too well. The model correctly called 46 of 56 states and districts, but considering there were only about 10 "swing states" to begin with, any reasonably informed observer could've done better. And indeed, the much more intricate models at Silver Bulletin, 538, etc. were far more accurate. 

However, I can claim some prescience about why my model failed. These predictions were predicated on the continuance of the remarkably strong trend of increased urban-rural political polarization which I observed in "The Urban-Rural Divide in American Politics." A simple linear regression predicted that the correlation coefficient between urbanization and Democratic vote share would jump to around 0.8 in 2024. Instead, the opposite happened.

```{r, echo=FALSE, message=FALSE}
newresults <- read_csv("pres_2024_results_by_state.csv")
```

```{r, echo=FALSE}
state_map <- setNames(state.name, state.abb)

newresults$state <- state_map[substr(newresults$state, 1, 2)]
# newresults$state[53] <- "District of Columbia"
```

```{r, echo=FALSE}
newresults_clean <- newresults[complete.cases(newresults), ]
newresults_clean <- newresults_clean %>% 
  left_join(state_urban, by = join_by(state))
```

```{r}
cor(newresults_clean$urbanindex, newresults_clean$pct_dem_2024)
```

The major story of the 2024 election was minority groups, especially Hispanics, swinging sharply rightward, and as minorities tend to live in urban areas, decreased racial polarization led to decreased urban-rural polarization. So my future as a political prognosticator may be limited. However, this was still a valuable coding challenge, and it's given me firsthand experience with an important lesson: past performance is not a guarantee of future results.

## Sources

[Geographic data](https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html)<br>
[Polls](https://www.270towin.com/2024-presidential-election-polls/) (accessed November 4)<br>
[Electoral votes](https://www.kaggle.com/datasets/mikedelong/2024-electoral-college-votes-available?resource=download)<br>
[Urbanization](https://github.com/fivethirtyeight/data/tree/master/district-urbanization-index-2022)<br>
[Urbanization (for DC)](https://github.com/fivethirtyeight/data/tree/master/urbanization-index)<br>
[Population data](https://www.census.gov/data/tables/time-series/demo/popest/2020s-state-total.html) <br>
[2024 vote](https://github.com/haotianchen/2024-election-scraper/blob/main/pres_2024_results_by_state.csv)